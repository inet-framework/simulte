# Example simulation for integrating veins (http://veins.car2x.org/) with SimuLTE
# 
# Requirements:
#       You need to enable the feature "SimuLTE Cars" for this simulation
#       (Project->Properties->OMNeT++->Project Features)
#
#       You need to import the "veins" project and its subproject
#       "veins_inet" in your workspace.
[General]
cmdenv-express-mode = true
cmdenv-autoflush = true
image-path = ../../images
network = lte.simulations.cars.Highway
*.configurator.config = xmldoc("demo.xml")

##########################################################
#            Simulation parameters                       #
##########################################################
debug-on-errors = false
print-undisposed = false

sim-time-limit = 70s

**.sctp.**.scalar-recording = false
**.sctp.**.vector-recording = false

**.coreDebug = false
**.routingRecorder.enabled = false

*.playgroundSizeX = 20000m
*.playgroundSizeY = 20000m
*.playgroundSizeZ = 50m

##########################################################
#            VeinsManager parameters                     #
##########################################################
*.veinsManager.host = "localhost"       # if traci-launchd runs on localhost
# *.veinsManager.host = "sumo"			  # if trace-launchd runs on a different host 
*.veinsManager.moduleType = "lte.corenetwork.nodes.cars.Car"
*.veinsManager.moduleName = "car"
*.veinsManager.launchConfig = xmldoc("heterogeneous.launchd.xml")
*.veinsManager.updateInterval = 0.1s

##########################################################
#                      Mobility                          #
##########################################################
*.car[*].mobilityType = "VeinsInetMobility"

##########################################################
#			         channel parameters                  #
##########################################################
**.channelControl.pMax = 10W
**.channelControl.alpha = 1.0
**.channelControl.carrierFrequency = 2100e+6Hz

##########################################################
#              LTE specific parameters                   #
##########################################################

# Enable dynamic association of UEs (based on best SINR)
*.car[*].lteNic.phy.dynamicCellAssociation = true

**.car[*].masterId = 1     # useless if dynamic association is disabled
**.car[*].macCellId = 1    # useless if dynamic association is disabled
**.eNodeB1.macCellId = 1
**.eNodeB1.macNodeId = 1
**.eNodeB2.macCellId = 2
**.eNodeB2.macNodeId = 2 
**.eNodeBCount = 2

# AMC module parameters 
**.rbAllocationType = "localized"
**.feedbackType = "ALLBANDS"
**.feedbackGeneratorType = "IDEAL"
**.maxHarqRtx = 3
**.numUe = ${numUEs=10}

# RUs
**.cellInfo.ruRange = 50
**.cellInfo.ruTxPower = "50,50,50;"
**.cellInfo.antennaCws = "2;" # !!MACRO + RUS (numRus + 1)
**.cellInfo.numRbDl = 25
**.cellInfo.numRbUl = 25
**.numBands = 25
**.fbDelay = 1

# Enable handover
*.car[*].lteNic.phy.enableHandover = true
*.eNodeB*.lteNic.phy.enableHandover = true
*.eNodeB*.lteNic.phy.broadcastMessageInterval = 0.5s

# X2 and SCTP configuration
*.eNodeB*.numX2Apps = 1    # one x2App per peering eNodeB
*.eNodeB*.x2App[*].server.localPort = 5000 + ancestorIndex(1) # Server ports (x2App[0]=5000, x2App[1]=5001, ...)
*.eNodeB1.x2App[0].client.connectAddress = "eNodeB2%x2ppp0" 
*.eNodeB2.x2App[0].client.connectAddress = "eNodeB1%x2ppp0" 
**.sctp.nagleEnabled = false         # if true, transmission of small packets will be delayed on the X2
**.sctp.enableHeartbeats = false



# ----------------------------------------------------------------------------- #
# Config "VoIP-Uplink"
#
[Config VoIP-UL]

##########################################################
#                    App Layer                           #
##########################################################
*.server.numApps = 10
*.server.app[*].typename = "VoIPReceiver"
*.server.app[*].localPort = 3000 + ancestorIndex(0) 

*.car[*].numApps = 1
*.car[*].app[0].typename = "VoIPSender"
*.car[*].app[0].destAddress = "server"
*.car[*].app[0].destPort = 3000 + ancestorIndex(1)


# ----------------------------------------------------------------------------- #
# Config "VoIP-Downlink"
#
[Config VoIP-DL]

##########################################################
#                    App Layer                           #
##########################################################
*.server.numApps = 10
*.server.app[*].typename = "VoIPSender"
*.server.app[*].localPort = 3000 + ancestorIndex(0) 
*.server.app[*].destAddress = "car[" + string(ancestorIndex(0)) + "]"
*.server.app[*].startingTime = 0.05s


*.car[*].numApps = 1
*.car[*].app[0].typename = "VoIPReceiver"


# ----------------------------------------------------------------------------- #
# Config "VoIP-D2D"
#
# In this configuration, UEs run a VoIP application (using UDP as transport layer protocol)
# They communicate using the D2D link, if they are under the same cell
#
[Config VoIP-D2D]

# Enable D2D for the eNodeB and the UEs involved in direct commulteNications
*.eNodeB*.nicType = "LteNicEnbD2D"
*.car[*].nicType = "LteNicUeD2D"
**.amcMode = "D2D"

# D2D-capable flows are started in D2D mode
*.car[*].lteNic.d2dInitialMode = true

# --- Select CQI for D2D transmissions --- #
#
# To enable the reporting of CQIs for each D2D link, set the parameter *.eNodeB.lteNic.phy.enableD2DCqiReporting
# To use fixed CQI, set the parameter **.usePreconfiguredTxParams and select the desired CQI using the parameter **.d2dCqi
*.eNodeB*.lteNic.phy.enableD2DCqiReporting = true
**.usePreconfiguredTxParams = false

*.car[*].numApps = 1
*.car[0..4].app[0].typename = "VoIPSender"
*.car[0..4].app[0].destAddress = "car[" + string(ancestorIndex(1)+5) + "]"

*.car[5..9].app[0].typename = "VoIPReceiver"



# ----------------------------------------------------------------------------- #
# Config "D2DMulticast"
#
# In this configuration, a transmitting car sends periodic alert messages to neighboring vehicles
#
[Config D2DMulticast]

### Enable D2D for the eNodeB and the UEs involved in direct communications ###
*.eNodeB*.nicType = "LteNicEnbD2D"
*.car[*].nicType = "LteNicUeD2D"
**.amcMode = "D2D"

### Select CQI for D2D transmissions ###
# One-to-Many communications work with fixed CQI values only.
# Set the parameter **.usePreconfiguredTxParams and select the desired CQI using the parameter **.d2dCqi
**.enableD2DCqiReporting = false
**.usePreconfiguredTxParams = true
**.d2dCqi = ${cqi=7}

### Traffic configuration: one-to-many traffic between UEs (car[0] --> car[1..9]) ###
*.car[*].numApps = 1

# Transmitter
*.car[0].app[*].typename = "AlertSender"
*.car[0].app[*].localPort = 3088+ancestorIndex(0) 
*.car[0].app[*].startTime = uniform(0s,0.02s)
*.car[0].app[*].destAddress = "224.0.0.10"          # IP address of the multicast group 
*.car[0].app[*].destPort = 1000

# Receivers (they must belong to the above multicast group)
*.car[1..9].app[*].typename = "AlertReceiver"
*.car[1..9].app[*].localPort = 1000

# enrolled multicast groups must be set in the HostAutoConfigurator (instead of demo.xml), seperated by a single space character
*.car[*].ipv4.configurator.mcastGroups = "224.0.0.10"



